-- This file was generated using Luraph Obfuscator v12.0 by memcorrupt.

local lIll1lliI1iii111llI1i = assert local lIll1iIlIl1IIII1IlIIi = select local l1lIill1Ill1I1ll1il = tonumber local lIlliIlIIilIil1i1IIli = unpack local lIlili1i1iII1ilIiii11 = pcall local I1ll1II1IiIiIliII11 = setfenv local ll1iIlI11iII1iii1iI = setmetatable local lIlllIIll1i1l11ilIlii = type local l1i1lIIl1i1II1iiiii = getfenv local l1liI1iI1Ii1111iiii = tostring local lIlIlliil1liIllilIi = error local lIl1Il1li1iiiiiiI11i1 = string.sub local l1i1II11lli111iIilI = string.byte local liiiIiII11ilII1lI1l = string.char local IIlI1li1lilIiilIIIl = string.rep local Ilil1Iliil1IlllIl1l = string.gsub local l1111IlI11I11II1iii = string.match local lIliiiIl1i1li1i1lIIiI = l1i1II11lli111iIilI("A", 1) local lIllli11li1llIIIl1ilI, illlIlIIiii1iI1lIll = #{4895}, #{ 1443, 5330, 4526, 1024, 2786, 2254, 327, 4114, 5948, 1976, 3678, 4826, 6370, 567, 889, 4628, 1620, 4924, 4207, 6836, 2275, 4579 } + lIliiiIl1i1li1i1lIIiI + 130984 local lIl11l1iiiiiIl11i1lII = {} local i1llIIi11iiIi11i1lI = 1 local function lIlII111iIIill11111li(li1IlI1iIli1III1ll1, llllI1liIi11li1iIii) local iIlIi11il1Ii11111il li1IlI1iIli1III1ll1 = Ilil1Iliil1IlllIl1l(lIl1Il1li1iiiiiiI11i1(li1IlI1iIli1III1ll1, 5), "..", function(lIl11iIiI1IlliiIIIlil) if l1i1II11lli111iIilI(lIl11iIiI1IlliiIIIlil, 2) == 72 then iIlIi11il1Ii11111il = l1lIill1Ill1I1ll1il(lIl1Il1li1iiiiiiI11i1(lIl11iIiI1IlliiIIIlil, 1, 1)) return "" else local iI1li1IIIli1ll1lIiI = liiiIiII11ilII1lI1l(l1lIill1Ill1I1ll1il(lIl11iIiI1IlliiIIIlil, 16)) if iIlIi11il1Ii11111il then local lIlIIiI111lI1Iii1iiiI = IIlI1li1lilIiilIIIl(iI1li1IIIli1ll1lIiI, iIlIi11il1Ii11111il) iIlIi11il1Ii11111il = nil return lIlIIiI111lI1Iii1iiiI else return iI1li1IIIli1ll1lIiI end end end) local function lIII1IlIillliillliI() local l1ii1illi1iiI1lli1i = l1i1II11lli111iIilI(li1IlI1iIli1III1ll1, i1llIIi11iiIi11i1lI, i1llIIi11iiIi11i1lI) i1llIIi11iiIi11i1lI = i1llIIi11iiIi11i1lI + 1 return l1ii1illi1iiI1lli1i end local function iliIiIi11l11iiI111i() local l1ii1illi1iiI1lli1i, iI1li1IIIli1ll1lIiI, lIlIIiI111lI1Iii1iiiI, ll1Ii111l1l11iliilI = l1i1II11lli111iIilI(li1IlI1iIli1III1ll1, i1llIIi11iiIi11i1lI, i1llIIi11iiIi11i1lI + 3) i1llIIi11iiIi11i1lI = i1llIIi11iiIi11i1lI + 4 return ll1Ii111l1l11iliilI * 16777216 + lIlIIiI111lI1Iii1iiiI * 65536 + iI1li1IIIli1ll1lIiI * 256 + l1ii1illi1iiI1lli1i end local function iIIi1II1l11l1iliI1i(lIlIi1lil1lIIl1iiIlIi, il111i1111iilIiill1, lIlI11llli1l1Iiil1l1I) if lIlI11llli1l1Iiil1l1I then local IilliI1IllIl1iilIl1, iIilI1I1IllliIlIIii = 0, 0 for l11iIiIl1IiIllIil1I = il111i1111iilIiill1, lIlI11llli1l1Iiil1l1I do IilliI1IllIl1iilIl1 = IilliI1IllIl1iilIl1 + 2 ^ iIilI1I1IllliIlIIii * iIIi1II1l11l1iliI1i(lIlIi1lil1lIIl1iiIlIi, l11iIiIl1IiIllIil1I) iIilI1I1IllliIlIIii = iIilI1I1IllliIlIIii + 1 end return IilliI1IllIl1iilIl1 else local lIlI1IlIIIiiIll1IIil1 = 2 ^ (il111i1111iilIiill1 - 1) return lIlI1IlIIIiiIll1IIil1 <= lIlIi1lil1lIIl1iiIlIi % (lIlI1IlIIIiiIll1IIil1 + lIlI1IlIIIiiIll1IIil1) and 1 or 0 end end local function l11IiilIl1liillI1il() local l1ii1illi1iiI1lli1i, iI1li1IIIli1ll1lIiI = iliIiIi11l11iiI111i(), iliIiIi11l11iiI111i() if l1ii1illi1iiI1lli1i == 0 and iI1li1IIIli1ll1lIiI == 0 then return 0 end return (-2 * iIIi1II1l11l1iliI1i(iI1li1IIIli1ll1lIiI, 32) + 1) * 2 ^ (iIIi1II1l11l1iliI1i(iI1li1IIIli1ll1lIiI, 21, 31) - 1023) * ((iIIi1II1l11l1iliI1i(iI1li1IIIli1ll1lIiI, 1, 20) * 4294967296 + l1ii1illi1iiI1lli1i) / 4503599627370496 + 1) end local function l1ilIIli1i1I1IIIiIi(liiII11iiil1iIiIl11) local lIlliiiIii1ililIlllII = { l1i1II11lli111iIilI(li1IlI1iIli1III1ll1, i1llIIi11iiIi11i1lI, i1llIIi11iiIi11i1lI + 3) } i1llIIi11iiIi11i1lI = i1llIIi11iiIi11i1lI + 4 local lIliiii11liI1ll1iI1l1 = { nil, nil, nil, nil, nil, nil, nil, nil } for l11iIiIl1IiIllIil1I = 1, 8 do lIliiii11liI1ll1iI1l1[l11iIiIl1IiIllIil1I] = iIIi1II1l11l1iliI1i(liiII11iiil1iIiIl11, l11iIiIl1IiIllIil1I) end local lI111iIII1I1ll1iIil = "" for l11iIiIl1IiIllIil1I = 1, 4 do local IilliI1IllIl1iilIl1, iIilI1I1IllliIlIIii = 0, 0 for llII1il1liill1l1Il1 = 1, 8 do local lIIiiiliIIIIlIliIiI = iIIi1II1l11l1iliI1i(lIlliiiIii1ililIlllII[l11iIiIl1IiIllIil1I], llII1il1liill1l1Il1) if lIliiii11liI1ll1iI1l1[llII1il1liill1l1Il1] == 1 then lIIiiiliIIIIlIliIiI = lIIiiiliIIIIlIliIiI == 1 and 0 or 1 end IilliI1IllIl1iilIl1 = IilliI1IllIl1iilIl1 + 2 ^ iIilI1I1IllliIlIIii * lIIiiiliIIIIlIliIiI iIilI1I1IllliIlIIii = iIilI1I1IllliIlIIii + 1 end lI111iIII1I1ll1iIil = lI111iIII1I1ll1iIil .. lI111iIII1I1ll1iIil.char(IilliI1IllIl1iilIl1) end local l1ii1illi1iiI1lli1i, iI1li1IIIli1ll1lIiI, lIlIIiI111lI1Iii1iiiI, ll1Ii111l1l11iliilI = l1i1II11lli111iIilI(lI111iIII1I1ll1iIil, 1, 4) return ll1Ii111l1l11iliilI * 16777216 + lIlIIiI111lI1Iii1iiiI * 65536 + iI1li1IIIli1ll1lIiI * 256 + l1ii1illi1iiI1lli1i end local function lliiII11I1l1l1IIIII(liiII11iiil1iIiIl11) local ll11i1IilllI1llI1lI = iliIiIi11l11iiI111i() i1llIIi11iiIi11i1lI = i1llIIi11iiIi11i1lI + ll11i1IilllI1llI1lI local lIliiii11liI1ll1iI1l1 = { nil, nil, nil, nil, nil, nil, nil, nil } for l11iIiIl1IiIllIil1I = 1, 8 do lIliiii11liI1ll1iI1l1[l11iIiIl1IiIllIil1I] = iIIi1II1l11l1iliI1i(liiII11iiil1iIiIl11, l11iIiIl1IiIllIil1I) end local lI111iIII1I1ll1iIil = "" for l11iIiIl1IiIllIil1I = 1, ll11i1IilllI1llI1lI do local IilliI1IllIl1iilIl1, iIilI1I1IllliIlIIii = 0, 0 for llII1il1liill1l1Il1 = 1, 8 do local lIIiiiliIIIIlIliIiI = iIIi1II1l11l1iliI1i(l1i1II11lli111iIilI(li1IlI1iIli1III1ll1, i1llIIi11iiIi11i1lI - ll11i1IilllI1llI1lI + l11iIiIl1IiIllIil1I - 1), llII1il1liill1l1Il1) if lIliiii11liI1ll1iI1l1[llII1il1liill1l1Il1] == 1 then lIIiiiliIIIIlIliIiI = lIIiiiliIIIIlIliIiI == 1 and 0 or 1 end IilliI1IllIl1iilIl1 = IilliI1IllIl1iilIl1 + 2 ^ iIilI1I1IllliIlIIii * lIIiiiliIIIIlIliIiI iIilI1I1IllliIlIIii = iIilI1I1IllliIlIIii + 1 end lI111iIII1I1ll1iIil = lI111iIII1I1ll1iIil .. lI111iIII1I1ll1iIil.char(IilliI1IllIl1iilIl1) end return lI111iIII1I1ll1iIil end local ilIIIilliiIiiII111l = lIII1IlIillliillliI() local liIi11IlIilIii1i1ll = lIII1IlIillliillliI() local function i1iIIllI1I1ill1iIll() local IliI1lIi1IiIIlIIi1l = { [32803] = {}, [76125] = {}, [127202] = {}, [66877] = {} } lIII1IlIillliillliI() iliIiIi11l11iiI111i() IliI1lIi1IiIIlIIi1l[97925] = lIII1IlIillliillliI() local lIi1iIilli1li1111iI = iliIiIi11l11iiI111i() for l11iIiIl1IiIllIil1I = lIllli11li1llIIIl1ilI, lIi1iIilli1li1111iI do IliI1lIi1IiIIlIIi1l[127202][l11iIiIl1IiIllIil1I - lIllli11li1llIIIl1ilI] = i1iIIllI1I1ill1iIll() end local lIi1iIilli1li1111iI = iliIiIi11l11iiI111i() - (#{ 266, 3423, 3858, 5463, 6268, 5677, 3208, 4294, 3863, 975, 3528, 6567, 3869, 2903, 5620, 196, 839, 2920, 6428, 3385, 5740, 6868, 1500, 2044 } + lIliiiIl1i1li1i1lIIiI + 133664) for l11iIiIl1IiIllIil1I = lIllli11li1llIIIl1ilI, lIi1iIilli1li1111iI do local iliIIIiIIIl1lllIlli = {} local lIlllIIll1i1l11ilIlii = lIII1IlIillliillliI() if lIlllIIll1i1l11ilIlii == #{ 5991, 5661, 6319, 2672, 5777, 3985, 5117, 5949, 6120, 5281, 5391, 326, 959, 2455, 1537, 4361, 1366 } then iliIIIiIIIl1lllIlli[71921] = lIII1IlIillliillliI() end if lIlllIIll1i1l11ilIlii == #{ 1349, 4027, 5709, 2051, 962, 4256, 4038, 3323, 4772, 3198, 2092, 6158, 2546, 6457, 6126, 6335, 719, 2684, 2945, 3805, 2089 } + lIliiiIl1i1li1i1lIIiI + -43 then iliIIIiIIIl1lllIlli[71921] = lliiII11I1l1l1IIIII(#{ 5095, 2544, 2557, 4873, 2556, 4342, 699, 1554, 4875, 784, 5268, 6776, 1829, 3221, 2645, 2168, 2836, 132, 2321, 1139 } + lIliiiIl1i1li1i1lIIiI + 35) end if lIlllIIll1i1l11ilIlii == #{ 3972, 5319, 1323, 2626, 2153, 922, 3681, 4225, 201, 884, 3495, 1395, 2500, 3325, 4024, 5778, 4807, 3837, 6420, 5700, 5536, 6311, 3663, 2166 } + lIliiiIl1i1li1i1lIIiI + -43 then iliIIIiIIIl1lllIlli[71921] = lliiII11I1l1l1IIIII(ilIIIilliiIiiII111l) end if lIlllIIll1i1l11ilIlii == #{ 1015, 2556, 1570, 4957, 2301, 1664, 5952, 5939, 6648, 4636, 1331, 4909, 2189, 5174, 6212, 1731, 5932, 63, 4727, 4220, 3431, 2047 } + lIliiiIl1i1li1i1lIIiI + 144 then iliIIIiIIIl1lllIlli[71921] = l11IiilIl1liillI1il() end if lIlllIIll1i1l11ilIlii == #{ 3465, 84, 674, 6670, 481, 1329, 6067, 1288, 5987, 443, 6495, 4462, 6327, 696, 4033, 1155, 1071, 1865, 5071, 5433, 416 } + lIliiiIl1i1li1i1lIIiI + 6 then iliIIIiIIIl1lllIlli[71921] = l11IiilIl1liillI1il() + l11IiilIl1liillI1il() end if lIlllIIll1i1l11ilIlii == #{ 5554, 2068, 5244, 6440, 3844, 2693, 6393, 2771, 3456, 3682, 2804, 3511, 3791, 4049, 403, 323, 963 } then iliIIIiIIIl1lllIlli[71921] = iliIiIi11l11iiI111i() end if lIlllIIll1i1l11ilIlii == #{ 502, 2570, 1962, 177, 5279, 5237, 2546, 289, 4464, 1020, 5116, 1972, 5121, 5224, 443, 3628, 2599, 3452, 908, 2316, 2138, 5596 } + lIliiiIl1i1li1i1lIIiI + -48 then iliIIIiIIIl1lllIlli[71921] = iliIiIi11l11iiI111i() end if lIlllIIll1i1l11ilIlii == #{ 3709, 5017, 5306, 3043, 920, 3649, 888, 4510, 5498, 1003, 768, 2177, 3487, 4246, 1846, 2553, 6334, 4463, 6682, 2183, 1498, 5331, 3397, 4855 } + lIliiiIl1i1li1i1lIIiI + 77 then iliIIIiIIIl1lllIlli[71921] = #{ 6831, 4189, 3596, 6737, 2425, 4465, 3099, 3485, 2646, 2868, 4003, 6584, 4937, 5288, 3475, 3426, 957, 1762, 2157, 2098, 5243, 3348 } + lIliiiIl1i1li1i1lIIiI + 105784 == #{ 6387, 5155, 223, 2583, 5477, 3698, 557, 6452, 6235, 6214, 4512, 3787, 932, 5715, 4666, 4905, 6080, 2636, 927, 266, 4118, 6460, 5038, 526 } + lIliiiIl1i1li1i1lIIiI + 82793 end if lIlllIIll1i1l11ilIlii == #{ 1107, 5785, 606, 4332, 1126, 5637, 3608, 3449, 2398, 2569, 6803, 655, 697, 3777, 5086, 1220, 3691, 5260, 3623, 3783 } + lIliiiIl1i1li1i1lIIiI + 105 then iliIIIiIIIl1lllIlli[71921] = #{ 6493, 3922, 1073, 1658, 6405, 1554, 2041, 3779, 258, 1899, 2037, 2730, 1698, 260, 2025, 136, 6921, 6752, 2877, 4709 } + lIliiiIl1i1li1i1lIIiI + 18245 == #{ 6493, 3922, 1073, 1658, 6405, 1554, 2041, 3779, 258, 1899, 2037, 2730, 1698, 260, 2025, 136, 6921, 6752, 2877, 4709 } + lIliiiIl1i1li1i1lIIiI + 18245 end IliI1lIi1IiIIlIIi1l[66877][l11iIiIl1IiIllIil1I - lIllli11li1llIIIl1ilI] = iliIIIiIIIl1lllIlli end lIII1IlIillliillliI() IliI1lIi1IiIIlIIi1l[123624] = lIII1IlIillliillliI() IliI1lIi1IiIIlIIi1l[10661] = lIII1IlIillliillliI() iliIiIi11l11iiI111i() local lIi1iIilli1li1111iI = iliIiIi11l11iiI111i() - (#{ 5484, 2009, 2817, 2852, 749, 3302, 5322, 695, 4582, 3690, 5926, 3688, 887, 6219, 444, 2829, 784, 2908, 5512, 4768, 5553, 5718, 5390 } + lIliiiIl1i1li1i1lIIiI + 133637) for l11iIiIl1IiIllIil1I = lIllli11li1llIIIl1ilI, lIi1iIilli1li1111iI do local I1ilIiI1iiil1llIIl1 = {} local lIi1lIIIlliiIIii1l1 = l1ilIIli1i1I1IIIiIi(liIi11IlIilIii1i1ll) I1ilIiI1iiil1llIIl1[97248] = iIIi1II1l11l1iliI1i(lIi1lIIIlliiIIii1l1, #{3049}, #{ 1616, 3985, 618, 6264, 4915, 4333, 5610, 3172, 2826 }) I1ilIiI1iiil1llIIl1[4412] = iIIi1II1l11l1iliI1i(lIi1lIIIlliiIIii1l1, #{ 4003, 5902, 1381, 3923, 5960, 2462, 1223, 1123, 5934, 2765, 5178, 253, 5101, 6819, 6586, 4018, 792, 5544, 3983, 55 } + lIliiiIl1i1li1i1lIIiI + -58, #{ 4771, 2965, 24, 2628, 4301, 4712, 5633, 5628, 4560, 5163, 5736, 1382, 3082, 159, 3158, 6671, 3331, 5473, 4202, 4819, 1850, 3975, 2300 } + lIliiiIl1i1li1i1lIIiI + -56) I1ilIiI1iiil1llIIl1[11664] = iIIi1II1l11l1iliI1i(lIi1lIIIlliiIIii1l1, #{6841}, #{ 1794, 803, 515, 23, 2416, 4492, 2148, 5233, 4730, 6451, 4604, 2045, 4329, 698, 4844, 5090, 1694, 496 }) I1ilIiI1iiil1llIIl1[107827] = iIIi1II1l11l1iliI1i(lIi1lIIIlliiIIii1l1, #{ 1658, 6155, 2188, 3754, 4226, 500, 6016, 4294, 3770, 4393, 6239, 5803, 3165, 4258, 5553, 4246, 3778, 6553, 2474 }, #{ 689, 3978, 6140, 2594, 2957, 6105, 895, 3791, 1722, 3407, 970, 5458, 6122, 1491, 2260, 5730, 1974, 5501, 2314, 5424, 6039 } + lIliiiIl1i1li1i1lIIiI + -60) I1ilIiI1iiil1llIIl1[129146] = iIIi1II1l11l1iliI1i(lIi1lIIIlliiIIii1l1, #{ 6253, 6422, 6965, 5809, 1252, 3756, 1881, 3565, 5200, 3931 }, #{ 3485, 2161, 5739, 2117, 2242, 5083, 4551, 5191, 4947, 299, 3364, 3856, 312, 3860, 1143, 5641, 476, 177 }) IliI1lIi1IiIIlIIi1l[32803][l11iIiIl1IiIllIil1I] = I1ilIiI1iiil1llIIl1 end local lIi1iIilli1li1111iI = iliIiIi11l11iiI111i() for l11iIiIl1IiIllIil1I = lIllli11li1llIIIl1ilI, lIi1iIilli1li1111iI do IliI1lIi1IiIIlIIi1l[76125][l11iIiIl1IiIllIil1I] = iliIiIi11l11iiI111i() end return IliI1lIi1IiIIlIIi1l end local function lIlIiIiill1iiliIl1I11(IliI1lIi1IiIIlIIi1l, llllI1liIi11li1iIii, illlIlIliIiiIililil) local l1I111lll11i11I11II, ll1IIi1lIi11lIll11i = 16, 10 local iIlIlI1I1IIl1II1li1 = IliI1lIi1IiIIlIIi1l[32803] local lli11iIIililii1lI1I = ll1iIlI11iII1iii1iI({}, { __index = function(ill1I1llI11ii1ilIl1, l1IllllIIiIiiiIiIII) local lI111iIII1I1ll1iIil = IliI1lIi1IiIIlIIi1l[66877][l1IllllIIiIiiiIiIII] if lIl1Il1li1iiiiiiI11i1(lIlllIIll1i1l11ilIlii(lI111iIII1I1ll1iIil[71921]), 1, 1) == "s" then return { [71921] = lIl1Il1li1iiiiiiI11i1(lI111iIII1I1ll1iIil[71921], 2) } end return lI111iIII1I1ll1iIil end }) local IllIilI1ll11IiIIiII = 123624 local lIll1lI1liI11IiliIIli = IliI1lIi1IiIIlIIi1l[127202] local II1lli1I1lIiIlliIII = 71921 local li1I1l1I1i1lll11i1l = IliI1lIi1IiIIlIIi1l[10661] local lIlIiI1Ii1III1111lIlI = 4412 local llIIiiI1IIiI1IilIii = IliI1lIi1IiIIlIIi1l[76125] local llllillII111IlI1l1l = 97248 local function iiiIIi1IiI1I11I1I1i(...) local I1liiIiiIlIlillIiii = 0 local l1IIlIiIil1iIlIliIi = { lIlliIlIIilIil1i1IIli({}, 1, IliI1lIi1IiIIlIIi1l[97925]) } local lIll11i1lIliIiiI11111 = 1 local iil1ili1IilIIlI11l1 = {} local IliIllilI11lI1l11l1 = {} local lIliiI1l111I1iiiiI1li = 1 local llllI1liIi11li1iIii = l1i1lIIl1i1II1iiiii() local lIlI11Iili111llii1I1I = { ... } local lIliI1I1lIl1l1II1i11l = #lIlI11Iili111llii1I1I - 1 for l11iIiIl1IiIllIil1I = 0, lIliI1I1lIl1l1II1i11l do if l11iIiIl1IiIllIil1I < li1I1l1I1i1lll11i1l then l1IIlIiIil1iIlIliIi[l11iIiIl1IiIllIil1I] = lIlI11Iili111llii1I1I[l11iIiIl1IiIllIil1I + 1] end end local function i1lIlII1li1lII1llI1(...) local lIlIIiI111lI1Iii1iiiI = lIll1iIlIl1IIII1IlIIi("#", ...) local ill1I1llI11ii1ilIl1 = { ... } return lIlIIiI111lI1Iii1iiiI, ill1I1llI11ii1ilIl1 end local function lIllI1lll1IiiIlI1iIll() while true do local i1IIiIil1IIIl1IliiI = iIlIlI1I1IIl1II1li1[lIll11i1lIliIiiI11111] local Ii1l11iIi111l1111II = i1IIiIil1IIIl1IliiI[4412] lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 + 1 local i1i1I1lIIiIiliIiIi1 = i1IIiIil1IIIl1IliiI[129146] local lIll1lI1ilI1i1IlI1I1l = i1IIiIil1IIIl1IliiI[107827] local lliI11iil1Iillll1il = i1IIiIil1IIIl1IliiI[11664] local II11llllii11IlIi11i = i1IIiIil1IIIl1IliiI[11664] - illlIlIIiii1iI1lIll local lIili1lIIIlI1lii1II = i1IIiIil1IIIl1IliiI[97248] if Ii1l11iIi111l1111II < 17 then if Ii1l11iIi111l1111II >= 8 then if Ii1l11iIi111l1111II >= 12 then if Ii1l11iIi111l1111II < 14 then if Ii1l11iIi111l1111II ~= 13 then l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = -l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] else local i1iIlIi1Il1Ii1Il1II = lIll1lI1ilI1i1IlI1I1l + 2 local IilIilI1lI1iiilllIl = { l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l](l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 1], l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 2]) } for l11iIiIl1IiIllIil1I = 1, i1i1I1lIIiIiliIiIi1 do l1IIlIiIil1iIlIliIi[i1iIlIi1Il1Ii1Il1II + l11iIiIl1IiIllIil1I] = IilIilI1lI1iiilllIl[l11iIiIl1IiIllIil1I] end if l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 3] ~= nil then l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 2] = l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 3] else lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 + 1 end end elseif Ii1l11iIi111l1111II < 15 then l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = #l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] elseif Ii1l11iIi111l1111II == 16 then if i1i1I1lIIiIiliIiIi1 == 135 then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 - 1 iIlIlI1I1IIl1II1li1[lIll11i1lIliIiiI11111] = { [4412] = 20, [107827] = (lIll1lI1ilI1i1IlI1I1l - 140) % 256, [129146] = (lIili1lIIIlI1lii1II - 140) % 256, [11664] = 0 } else l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] end else local IiI1iI1I1iIlIiII11i, lli1iIili1lIiliiiiI, lIllI1lll1IiiIlI1iIll if lIili1lIIIlI1lii1II ~= 1 then if lIili1lIIIlI1lii1II ~= 0 then lli1iIili1lIiliiiiI = lIll1lI1ilI1i1IlI1I1l + lIili1lIIIlI1lii1II - 1 else lli1iIili1lIiliiiiI = I1liiIiiIlIlillIiii end lli1iIili1lIiliiiiI, IiI1iI1I1iIlIiII11i = i1lIlII1li1lII1llI1(l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l](lIlliIlIIilIil1i1IIli(l1IIlIiIil1iIlIliIi, lIll1lI1ilI1i1IlI1I1l + 1, lli1iIili1lIiliiiiI))) else lli1iIili1lIiliiiiI, IiI1iI1I1iIlIiII11i = i1lIlII1li1lII1llI1(l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l]()) end if i1i1I1lIIiIiliIiIi1 ~= 1 then if i1i1I1lIIiIiliIiIi1 ~= 0 then lli1iIili1lIiliiiiI = lIll1lI1ilI1i1IlI1I1l + i1i1I1lIIiIiliIiIi1 - 2 else lli1iIili1lIiliiiiI = lli1iIili1lIiliiiiI + lIll1lI1ilI1i1IlI1I1l end lIllI1lll1IiiIlI1iIll = 0 for l11iIiIl1IiIllIil1I = lIll1lI1ilI1i1IlI1I1l, lli1iIili1lIiliiiiI do lIllI1lll1IiiIlI1iIll = lIllI1lll1IiiIlI1iIll + 1 l1IIlIiIil1iIlIliIi[l11iIiIl1IiIllIil1I] = IiI1iI1I1iIlIiII11i[lIllI1lll1IiiIlI1iIll] end end I1liiIiiIlIlillIiii = lli1iIili1lIiliiiiI - 1 end elseif Ii1l11iIi111l1111II >= 10 then if Ii1l11iIi111l1111II == 11 then l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = llllI1liIi11li1iIii[lli11iIIililii1lI1I[lliI11iil1Iillll1il][II1lli1I1lIiIlliIII]] elseif i1i1I1lIIiIiliIiIi1 == 39 then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 - 1 iIlIlI1I1IIl1II1li1[lIll11i1lIliIiiI11111] = { [4412] = 14, [107827] = (lIll1lI1ilI1i1IlI1I1l - 171) % 256, [97248] = (lIili1lIIIlI1lii1II - 171) % 256, [11664] = 0 } else l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = illlIlIliIiiIililil[lIili1lIIIlI1lii1II] end elseif Ii1l11iIi111l1111II == 9 then if not not l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] == (i1i1I1lIIiIiliIiIi1 == 0) then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 + 1 else l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] end else l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = { lIlliIlIIilIil1i1IIli(lIl11l1iiiiiIl11i1lII, 1, lIili1lIIIlI1lii1II == 0 and 895 or lIili1lIIIlI1lii1II) } end elseif Ii1l11iIi111l1111II < 4 then if Ii1l11iIi111l1111II < 2 then if Ii1l11iIi111l1111II == 1 then lIili1lIIIlI1lii1II = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] if i1i1I1lIIiIiliIiIi1 > 255 then i1i1I1lIIiIiliIiIi1 = lli11iIIililii1lI1I[i1i1I1lIIiIiliIiIi1 - 256][II1lli1I1lIiIlliIII] else i1i1I1lIIiIiliIiIi1 = l1IIlIiIil1iIlIliIi[i1i1I1lIIiIiliIiIi1] end l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 1] = lIili1lIIIlI1lii1II l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = lIili1lIIIlI1lii1II[i1i1I1lIIiIiliIiIi1] else l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = lIll1lliI1iii111llI1i(l1lIill1Ill1I1ll1il(l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l]), "`for` initial value must be a number") l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 1] = lIll1lliI1iii111llI1i(l1lIill1Ill1I1ll1il(l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 1]), "`for` limit value must be a number") l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 2] = lIll1lliI1iii111llI1i(l1lIill1Ill1I1ll1il(l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 2]), "`for` step value must be a number") l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] - l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 2] lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 + II11llllii11IlIi11i end elseif Ii1l11iIi111l1111II ~= 3 then if lIili1lIIIlI1lii1II > 255 then lIili1lIIIlI1lii1II = lli11iIIililii1lI1I[lIili1lIIIlI1lii1II - 256][II1lli1I1lIiIlliIII] else lIili1lIIIlI1lii1II = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] end if i1i1I1lIIiIiliIiIi1 > 255 then i1i1I1lIIiIiliIiIi1 = lli11iIIililii1lI1I[i1i1I1lIIiIiliIiIi1 - 256][II1lli1I1lIiIlliIII] else i1i1I1lIIiIiliIiIi1 = l1IIlIiIil1iIlIliIi[i1i1I1lIIiIiliIiIi1] end l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = lIili1lIIIlI1lii1II * i1i1I1lIIiIiliIiIi1 else local IiilliliI1i1II1IiI1 = l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 2] local i1llIIi11iiIi11i1lI = l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] + IiilliliI1i1II1IiI1 l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = i1llIIi11iiIi11i1lI if IiilliliI1i1II1IiI1 > 0 then if i1llIIi11iiIi11i1lI <= l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 1] then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 + II11llllii11IlIi11i l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 3] = i1llIIi11iiIi11i1lI end elseif i1llIIi11iiIi11i1lI >= l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 1] then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 + II11llllii11IlIi11i l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + 3] = i1llIIi11iiIi11i1lI end end elseif Ii1l11iIi111l1111II < 6 then if Ii1l11iIi111l1111II == 5 then l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = lli11iIIililii1lI1I[lliI11iil1Iillll1il][II1lli1I1lIiIlliIII] else if lIili1lIIIlI1lii1II > 255 then lIili1lIIIlI1lii1II = lli11iIIililii1lI1I[lIili1lIIIlI1lii1II - 256][II1lli1I1lIiIlliIII] else lIili1lIIIlI1lii1II = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] end if i1i1I1lIIiIiliIiIi1 > 255 then i1i1I1lIIiIiliIiIi1 = lli11iIIililii1lI1I[i1i1I1lIIiIiliIiIi1 - 256][II1lli1I1lIiIlliIII] else i1i1I1lIIiIiliIiIi1 = l1IIlIiIil1iIlIliIi[i1i1I1lIIiIiliIiIi1] end l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = lIili1lIIIlI1lii1II % i1i1I1lIIiIiliIiIi1 end elseif Ii1l11iIi111l1111II == 7 then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 + II11llllii11IlIi11i else if lIili1lIIIlI1lii1II > 255 then lIili1lIIIlI1lii1II = lli11iIIililii1lI1I[lIili1lIIIlI1lii1II - 256][II1lli1I1lIiIlliIII] else lIili1lIIIlI1lii1II = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] end if i1i1I1lIIiIiliIiIi1 > 255 then i1i1I1lIIiIiliIiIi1 = lli11iIIililii1lI1I[i1i1I1lIIiIiliIiIi1 - 256][II1lli1I1lIiIlliIII] else i1i1I1lIIiIiliIiIi1 = l1IIlIiIil1iIlIliIi[i1i1I1lIIiIiliIiIi1] end if lIili1lIIIlI1lii1II == i1i1I1lIIiIiliIiIi1 ~= (lIll1lI1ilI1i1IlI1I1l ~= 0) then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 + 1 end end elseif Ii1l11iIi111l1111II < 25 then if Ii1l11iIi111l1111II < 21 then if Ii1l11iIi111l1111II >= 19 then if Ii1l11iIi111l1111II == 20 then if lIili1lIIIlI1lii1II == 211 then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 - 1 iIlIlI1I1IIl1II1li1[lIll11i1lIliIiiI11111] = { [4412] = 19, [107827] = (lIll1lI1ilI1i1IlI1I1l - 182) % 256, [97248] = (i1i1I1lIIiIiliIiIi1 - 182) % 256, [11664] = 0 } elseif lIili1lIIIlI1lii1II == 72 then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 - 1 iIlIlI1I1IIl1II1li1[lIll11i1lIliIiiI11111] = { [4412] = 32, [107827] = (lIll1lI1ilI1i1IlI1I1l - 64) % 256, [97248] = (i1i1I1lIIiIiliIiIi1 - 64) % 256, [11664] = 0 } elseif not not l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] == (i1i1I1lIIiIiliIiIi1 == 0) then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 + 1 end elseif i1i1I1lIIiIiliIiIi1 == 2 then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 - 1 iIlIlI1I1IIl1II1li1[lIll11i1lIliIiiI11111] = { [4412] = 21, [107827] = (lIll1lI1ilI1i1IlI1I1l - 64) % 256, [97248] = (lIili1lIIIlI1lii1II - 64) % 256, [11664] = 0 } else l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = not l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] end elseif Ii1l11iIi111l1111II ~= 18 then if lIili1lIIIlI1lii1II > 255 then lIili1lIIIlI1lii1II = lli11iIIililii1lI1I[lIili1lIIIlI1lii1II - 256][II1lli1I1lIiIlliIII] else lIili1lIIIlI1lii1II = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] end if i1i1I1lIIiIiliIiIi1 > 255 then i1i1I1lIIiIiliIiIi1 = lli11iIIililii1lI1I[i1i1I1lIIiIiliIiIi1 - 256][II1lli1I1lIiIlliIII] else i1i1I1lIIiIiliIiIi1 = l1IIlIiIil1iIlIliIi[i1i1I1lIIiIiliIiIi1] end l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l][lIili1lIIIlI1lii1II] = i1i1I1lIIiIiliIiIi1 else local IilIilI1lI1iiilllIl = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] for l11iIiIl1IiIllIil1I = lIili1lIIIlI1lii1II + 1, i1i1I1lIIiIiliIiIi1 do IilIilI1lI1iiilllIl = IilIilI1lI1iiilllIl .. l1IIlIiIil1iIlIliIi[l11iIiIl1IiIllIil1I] end l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = IilIilI1lI1iiilllIl end elseif Ii1l11iIi111l1111II < 23 then if Ii1l11iIi111l1111II ~= 22 then if i1i1I1lIIiIiliIiIi1 == 156 then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 - 1 iIlIlI1I1IIl1II1li1[lIll11i1lIliIiiI11111] = { [4412] = 13, [107827] = (lIll1lI1ilI1i1IlI1I1l - 106) % 256, [129146] = (lIili1lIIIlI1lii1II - 106) % 256, [11664] = 0 } else if lIili1lIIIlI1lii1II == 1 then return true end local lli1iIili1lIiliiiiI = lIll1lI1ilI1i1IlI1I1l + lIili1lIIIlI1lii1II - 2 if lIili1lIIIlI1lii1II == 0 then lli1iIili1lIiliiiiI = I1liiIiiIlIlillIiii end return true, lIll1lI1ilI1i1IlI1I1l, lli1iIili1lIiliiiiI end else if i1i1I1lIIiIiliIiIi1 > 255 then i1i1I1lIIiIiliIiIi1 = lli11iIIililii1lI1I[i1i1I1lIIiIiliIiIi1 - 256][II1lli1I1lIiIlliIII] else i1i1I1lIIiIiliIiIi1 = l1IIlIiIil1iIlIliIi[i1i1I1lIIiIiliIiIi1] end l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II][i1i1I1lIIiIiliIiIi1] end elseif Ii1l11iIi111l1111II == 24 then if lIili1lIIIlI1lii1II > 255 then lIili1lIIIlI1lii1II = lli11iIIililii1lI1I[lIili1lIIIlI1lii1II - 256][II1lli1I1lIiIlliIII] else lIili1lIIIlI1lii1II = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] end if i1i1I1lIIiIiliIiIi1 > 255 then i1i1I1lIIiIiliIiIi1 = lli11iIIililii1lI1I[i1i1I1lIIiIiliIiIi1 - 256][II1lli1I1lIiIlliIII] else i1i1I1lIIiIiliIiIi1 = l1IIlIiIil1iIlIliIi[i1i1I1lIIiIiliIiIi1] end l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = lIili1lIIIlI1lii1II + i1i1I1lIIiIiliIiIi1 else for l11iIiIl1IiIllIil1I = lIll1lI1ilI1i1IlI1I1l, lIili1lIIIlI1lii1II do l1IIlIiIil1iIlIliIi[l11iIiIl1IiIllIil1I] = nil end end elseif Ii1l11iIi111l1111II >= 29 then if Ii1l11iIi111l1111II >= 31 then if Ii1l11iIi111l1111II < 32 then llllI1liIi11li1iIii[lli11iIIililii1lI1I[lliI11iil1Iillll1il][II1lli1I1lIiIlliIII]] = l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] elseif Ii1l11iIi111l1111II ~= 33 then for l11iIiIl1IiIllIil1I = lIll1lI1ilI1i1IlI1I1l, #l1IIlIiIil1iIlIliIi do local lIl1iIl1111l1Il1illl1 = lIliiI1l111I1iiiiI1li for llII1il1liill1l1Il1 = 1, #iil1ili1IilIIlI11l1 do local ll1l1IIlliIiIilI1I1 = iil1ili1IilIIlI11l1[llII1il1liill1l1Il1] for liiII11iiil1iIiIl11, liiiiIil1II1iIl11II in next, ll1l1IIlliIiIilI1I1, nil do if l1IIlIiIil1iIlIliIi == liiiiIil1II1iIl11II[1] and liiiiIil1II1iIl11II[2] == l11iIiIl1IiIllIil1I then if not IliIllilI11lI1l11l1[lIl1iIl1111l1Il1illl1] then IliIllilI11lI1l11l1[lIl1iIl1111l1Il1illl1] = l1IIlIiIil1iIlIliIi[l11iIiIl1IiIllIil1I] lIliiI1l111I1iiiiI1li = lIliiI1l111I1iiiiI1li + 1 end ll1l1IIlliIiIilI1I1[liiII11iiil1iIiIl11] = {IliIllilI11lI1l11l1, lIl1iIl1111l1Il1illl1} end end end end else illlIlIliIiiIililil[lIili1lIIIlI1lii1II] = l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] end elseif Ii1l11iIi111l1111II == 30 then if i1i1I1lIIiIiliIiIi1 == 146 then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 - 1 iIlIlI1I1IIl1II1li1[lIll11i1lIliIiiI11111] = { [4412] = 16, [107827] = (lIll1lI1ilI1i1IlI1I1l - 192) % 256, [97248] = (lIili1lIIIlI1lii1II - 192) % 256, [11664] = 0 } elseif i1i1I1lIIiIiliIiIi1 == 175 then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 - 1 iIlIlI1I1IIl1II1li1[lIll11i1lIliIiiI11111] = { [4412] = 23, [107827] = (lIll1lI1ilI1i1IlI1I1l - 1) % 256, [97248] = (lIili1lIIIlI1lii1II - 1) % 256, [11664] = 0 } else local liIlIIIlliiiliI1lil = lIili1lIIIlI1lii1II > 0 and lIili1lIIIlI1lii1II - 1 or lIliI1I1lIl1l1II1i11l - li1I1l1I1i1lll11i1l if liIlIIIlliiiliI1lil < 0 then liIlIIIlliiiliI1lil = -1 end for l11iIiIl1IiIllIil1I = lIll1lI1ilI1i1IlI1I1l, lIll1lI1ilI1i1IlI1I1l + liIlIIIlliiiliI1lil do l1IIlIiIil1iIlIliIi[l11iIiIl1IiIllIil1I] = lIlI11Iili111llii1I1I[li1I1l1I1i1lll11i1l + (l11iIiIl1IiIllIil1I - lIll1lI1ilI1i1IlI1I1l) + 1] end I1liiIiiIlIlillIiii = lIll1lI1ilI1i1IlI1I1l + liIlIIIlliiiliI1lil end else local IlIiiil111l1IIil1lI = lIll1lI1liI11IiliIIli[lliI11iil1Iillll1il] local lII1l1lIiIi1IIiI1lI = {} if IlIiiil111l1IIil1lI[IllIilI1ll11IiIIiII] > 0 then do local l11i11lIi1I11lIiiIl = {} lII1l1lIiIi1IIiI1lI = ll1iIlI11iII1iii1iI({}, { __index = function(ill1I1llI11ii1ilIl1, l1IllllIIiIiiiIiIII) local liiiiIil1II1iIl11II = l11i11lIi1I11lIiiIl[l1IllllIIiIiiiIiIII] return liiiiIil1II1iIl11II[1][liiiiIil1II1iIl11II[2]] end, __newindex = function(ill1I1llI11ii1ilIl1, l1IllllIIiIiiiIiIII, III11iI1i11illI1liI) local liiiiIil1II1iIl11II = l11i11lIi1I11lIiiIl[l1IllllIIiIiiiIiIII] liiiiIil1II1iIl11II[1][liiiiIil1II1iIl11II[2]] = III11iI1i11illI1liI end }) for l11iIiIl1IiIllIil1I = 1, IlIiiil111l1IIil1lI[IllIilI1ll11IiIIiII] do local IiIiIi11i1iiliI1lIi = iIlIlI1I1IIl1II1li1[lIll11i1lIliIiiI11111] if IiIiIi11i1iiliI1lIi[lIlIiI1Ii1III1111lIlI] == l1I111lll11i11I11II then l11i11lIi1I11lIiiIl[l11iIiIl1IiIllIil1I - 1] = { l1IIlIiIil1iIlIliIi, IiIiIi11i1iiliI1lIi[llllillII111IlI1l1l] } elseif IiIiIi11i1iiliI1lIi[lIlIiI1Ii1III1111lIlI] == ll1IIi1lIi11lIll11i then l11i11lIi1I11lIiiIl[l11iIiIl1IiIllIil1I - 1] = { illlIlIliIiiIililil, IiIiIi11i1iiliI1lIi[llllillII111IlI1l1l] } end lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 + 1 end iil1ili1IilIIlI11l1[#iil1ili1IilIIlI11l1 + 1] = l11i11lIi1I11lIiiIl end end local l11il111ii1IliIl1I1 = lIlIiIiill1iiliIl1I11(IlIiiil111l1IIil1lI, llllI1liIi11li1iIii, lII1l1lIiIi1IIiI1lI) l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = l11il111ii1IliIl1I1 end elseif Ii1l11iIi111l1111II < 27 then if Ii1l11iIi111l1111II ~= 26 then local i1iIlIi1Il1Ii1Il1II = (i1i1I1lIIiIiliIiIi1 - 1) * 50 if lIili1lIIIlI1lii1II == 0 then lIili1lIIIlI1lii1II = I1liiIiiIlIlillIiii - lIll1lI1ilI1i1IlI1I1l end for l11iIiIl1IiIllIil1I = 1, lIili1lIIIlI1lii1II do l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l][i1iIlIi1Il1Ii1Il1II + l11iIiIl1IiIllIil1I] = l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l + l11iIiIl1IiIllIil1I] end else if lIili1lIIIlI1lii1II > 255 then lIili1lIIIlI1lii1II = lli11iIIililii1lI1I[lIili1lIIIlI1lii1II - 256][II1lli1I1lIiIlliIII] else lIili1lIIIlI1lii1II = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] end if i1i1I1lIIiIiliIiIi1 > 255 then i1i1I1lIIiIiliIiIi1 = lli11iIIililii1lI1I[i1i1I1lIIiIiliIiIi1 - 256][II1lli1I1lIiIlliIII] else i1i1I1lIIiIiliIiIi1 = l1IIlIiIil1iIlIliIi[i1i1I1lIIiIiliIiIi1] end if lIili1lIIIlI1lii1II < i1i1I1lIIiIiliIiIi1 ~= (lIll1lI1ilI1i1IlI1I1l ~= 0) then lIll11i1lIliIiiI11111 = lIll11i1lIliIiiI11111 + 1 end end elseif Ii1l11iIi111l1111II == 28 then if lIili1lIIIlI1lii1II > 255 then lIili1lIIIlI1lii1II = lli11iIIililii1lI1I[lIili1lIIIlI1lii1II - 256][II1lli1I1lIiIlliIII] else lIili1lIIIlI1lii1II = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] end if i1i1I1lIIiIiliIiIi1 > 255 then i1i1I1lIIiIiliIiIi1 = lli11iIIililii1lI1I[i1i1I1lIIiIiliIiIi1 - 256][II1lli1I1lIiIlliIII] else i1i1I1lIIiIiliIiIi1 = l1IIlIiIil1iIlIliIi[i1i1I1lIIiIiliIiIi1] end l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = lIili1lIIIlI1lii1II - i1i1I1lIIiIiliIiIi1 else if lIili1lIIIlI1lii1II > 255 then lIili1lIIIlI1lii1II = lli11iIIililii1lI1I[lIili1lIIIlI1lii1II - 256][II1lli1I1lIiIlliIII] else lIili1lIIIlI1lii1II = l1IIlIiIil1iIlIliIi[lIili1lIIIlI1lii1II] end if i1i1I1lIIiIiliIiIi1 > 255 then i1i1I1lIIiIiliIiIi1 = lli11iIIililii1lI1I[i1i1I1lIIiIiliIiIi1 - 256][II1lli1I1lIiIlliIII] else i1i1I1lIIiIiliIiIi1 = l1IIlIiIil1iIlIliIi[i1i1I1lIIiIiliIiIi1] end l1IIlIiIil1iIlIliIi[lIll1lI1ilI1i1IlI1I1l] = lIili1lIIIlI1lii1II / i1i1I1lIIiIiliIiIi1 end end end local l11IiIliIIIIi1liiIl, lI111iIII1I1ll1iIil, I1illiiilliI11Ii1II, lIlili1I11liIiIII1iI1 = lIlili1i1iII1ilIiii11(lIllI1lll1IiiIlI1iIll) if l11IiIliIIIIi1liiIl then if I1illiiilliI11Ii1II then return lIlliIlIIilIil1i1IIli(l1IIlIiIil1iIlIliIi, I1illiiilliI11Ii1II, lIlili1I11liIiIII1iI1) end else local lIlIIl11i1IIiI1Iiil1I = Ilil1Iliil1IlllIl1l("Luraph Script:" .. (llIIiiI1IIiI1IilIii[lIll11i1lIliIiiI11111 - 1] or "") .. ": " .. l1liI1iI1Ii1111iiii(lI111iIII1I1ll1iIil), "[^:]+:%d*: ", function(lIl11iIiI1IlliiIIIlil) if not l1111IlI11I11II1iii(lIl11iIiI1IlliiIIIlil, "Luraph Script:%d") then return "" end end) lIlIlliil1liIllilIi(lIlIIl11i1IIiI1Iiil1I, 0) end end I1ll1II1IiIiIliII11(iiiIIi1IiI1I11I1I1i, llllI1liIi11li1iIii) return iiiIIi1IiI1I11I1I1i end local I1lli1Iill1ii1iIi1i = i1iIIllI1I1ill1iIll() return lIlIiIiill1iiliIl1I11(I1lli1Iill1ii1iIi1i, llllI1liIi11li1iIii)() end lIlII111iIIill11111lil1i1lIIl1i1II1iiiii()) 